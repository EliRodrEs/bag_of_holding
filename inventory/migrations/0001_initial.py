# Generated by Django 5.0.7 on 2024-08-12 17:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('creation_date', models.DateTimeField(verbose_name='Date created')),
                ('acquisition_date', models.CharField(blank=True, max_length=200, null=True, verbose_name='Date acquired')),
                ('notes', models.TextField(blank=True, null=True)),
                ('party_owned', models.BooleanField(default=False)),
                ('available', models.BooleanField(default=True)),
                ('rarity', models.CharField(choices=[('common', 'Common'), ('uncommon', 'Uncommon'), ('rare', 'Rare'), ('very_rare', 'Very Rare'), ('legendary', 'Legendary')], default='common', max_length=200)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('attunement_required', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItemPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pp', models.FloatField(blank=True, null=True)),
                ('ep', models.FloatField(blank=True, null=True)),
                ('gp', models.FloatField(blank=True, null=True)),
                ('sp', models.FloatField(blank=True, null=True)),
                ('cp', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('armor_type', models.CharField(choices=[('light', 'Light'), ('medium', 'Medium'), ('heavy', 'Heavy'), ('shield', 'Shield')], max_length=50)),
                ('armor_class', models.CharField(max_length=50)),
                ('strength_requirement', models.IntegerField(blank=True, null=True)),
                ('stealth_disadvantage', models.BooleanField(default=False)),
            ],
            bases=('inventory.baseitem',),
        ),
        migrations.CreateModel(
            name='Potion',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('effect', models.TextField()),
                ('duration', models.CharField(blank=True, max_length=100, null=True)),
            ],
            bases=('inventory.baseitem',),
        ),
        migrations.CreateModel(
            name='Rod',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('charges', models.IntegerField(blank=True, default=0, help_text='Remaining charges', null=True)),
                ('max_charges', models.IntegerField(blank=True, default=0, help_text='Maximum charges', null=True)),
                ('recharge_type', models.CharField(choices=[('dawn', 'dawn'), ('long_r', 'long rest'), ('short_r', 'short rest'), ('dusk', 'dusk'), ('other', 'other')], max_length=200)),
                ('effect', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('inventory.baseitem', models.Model),
        ),
        migrations.CreateModel(
            name='Scroll',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('spell_name', models.CharField(max_length=200)),
                ('spell_level', models.IntegerField()),
                ('spell_effects', models.TextField()),
            ],
            bases=('inventory.baseitem',),
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('charges', models.IntegerField(blank=True, default=0, help_text='Remaining charges', null=True)),
                ('max_charges', models.IntegerField(blank=True, default=0, help_text='Maximum charges', null=True)),
                ('recharge_type', models.CharField(choices=[('dawn', 'dawn'), ('long_r', 'long rest'), ('short_r', 'short rest'), ('dusk', 'dusk'), ('other', 'other')], max_length=200)),
                ('effect', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('inventory.baseitem', models.Model),
        ),
        migrations.CreateModel(
            name='Wand',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('charges', models.IntegerField(blank=True, default=0, help_text='Remaining charges', null=True)),
                ('max_charges', models.IntegerField(blank=True, default=0, help_text='Maximum charges', null=True)),
                ('recharge_type', models.CharField(choices=[('dawn', 'dawn'), ('long_r', 'long rest'), ('short_r', 'short rest'), ('dusk', 'dusk'), ('other', 'other')], max_length=200)),
                ('effect', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('inventory.baseitem', models.Model),
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('weapon_type', models.CharField(choices=[('melee', 'Melee'), ('ranged', 'Ranged')], max_length=50)),
                ('damage', models.CharField(max_length=50)),
                ('properties', models.TextField()),
            ],
            bases=('inventory.baseitem',),
        ),
        migrations.CreateModel(
            name='WondrousItem',
            fields=[
                ('baseitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.baseitem')),
                ('charges', models.IntegerField(blank=True, default=0, help_text='Remaining charges', null=True)),
                ('max_charges', models.IntegerField(blank=True, default=0, help_text='Maximum charges', null=True)),
                ('recharge_type', models.CharField(choices=[('dawn', 'dawn'), ('long_r', 'long rest'), ('short_r', 'short rest'), ('dusk', 'dusk'), ('other', 'other')], max_length=200)),
                ('effect', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('inventory.baseitem', models.Model),
        ),
        migrations.AddField(
            model_name='baseitem',
            name='price',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='base_item', to='inventory.itemprice'),
        ),
    ]
